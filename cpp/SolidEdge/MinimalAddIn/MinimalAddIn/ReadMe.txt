========================================================================
    ACTIVE TEMPLATE LIBRARY : MinimalAddIn Project Overview
========================================================================

This example ATL Solid Edge AddIn was created using Visual Studio 2012, Windows 8 and
Solid Edge ST6. It demonstrates the minimal requirements for creating a Solid Edge AddIn.

This project is configured to include path "C:\Program Files\Solid Edge ST6\Program".
If you are getting build errors, you may have to update the path to your Solid Edge installation.
Project -> Properties -> Configuration Properties -> VC++ Directories -> Library Directories
Specifically, the #import directives in stdafx.h have to be able to resolve the .tlb(s).

To debug the addin in Visual Studio, you will need to configure the following project property:
Project -> Properties -> Configuration Properties -> Debugging -> Command = C:\Program Files\Solid Edge ST6\Program\Edge.exe

There are two configured target 'Solution Platforms', 'Win32' & 'x64'. Select the appropriate platform
you wish to build for. If debugging, you will need to pick the platform that matches your Solid Edge build.

It is strongly suggested that your familiarize yourself with <Solid Edge>\SDK\Samples\Addins\Doc\addin.doc.
That document contains essential information regarding Solid Edge AddIns.

After successfully building the project, MinimalAddIn.dll must be manually registered using command line
regsvr32.exe MinimalAddIn.dll.  If you are using Windows Vista or greater with UAC enabled, you must run
the command shell in 'Administrator mode'.

MinimalAddIn.vcxproj
    This is the main project file for VC++ projects generated using an Application Wizard.
    It contains information about the version of Visual C++ that generated the file, and
    information about the platforms, configurations, and project features selected with the
    Application Wizard.

MinimalAddIn.vcxproj.filters
    This is the filters file for VC++ projects generated using an Application Wizard. 
    It contains information about the association between the files in your project 
    and the filters. This association is used in the IDE to show grouping of files with
    similar extensions under a specific node (for e.g. ".cpp" files are associated with the
    "Source Files" filter).

MinimalAddIn.idl
    This file contains the IDL definitions of the type library, the interfaces
    and co-classes defined in your project.
    This file will be processed by the MIDL compiler to generate:
        C++ interface definitions and GUID declarations (MinimalAddIn.h)
        GUID definitions                                (MinimalAddIn_i.c)
        A type library                                  (MinimalAddIn.tlb)
        Marshaling code                                 (MinimalAddIn_p.c and dlldata.c)

MinimalAddIn.h
    This file contains the C++ interface definitions and GUID declarations of the
    items defined in MinimalAddIn.idl. It will be regenerated by MIDL during compilation.

MinimalAddIn.cpp
    This file contains the object map and the implementation of your DLL's exports.

MinimalAddIn.rc
    This is a listing of all of the Microsoft Windows resources that the
    program uses.

MinimalAddIn.def
    This module-definition file provides the linker with information about the exports
    required by your DLL. It contains exports for:
        DllGetClassObject
        DllCanUnloadNow
        DllRegisterServer
        DllUnregisterServer
        DllInstall

MySolidEdgeAddIn.cpp
    This file contains the SolidEdgeFramework::ISolidEdgeAddIn implementation. Solid Edge
	will call OnConnection() the first time the addin is loaded and OnDisconnection() when
	the addin is unloaded. Depending on which 'Environment Categories' are registered in
	MySolidEdgeAddIn.rgs, Solid Edge will call OnConnectToEnvironment(). The environment GUID's
	can be found in <Solid Edge>\SDK\include\secatids.h.

MySolidEdgeAddIn.rgs
	This registry script gets executed when regsvr32.exe is run against the .dll. It containts
	required registry entries for a Solid Edge AddIn. 

/////////////////////////////////////////////////////////////////////////////
Other standard files:

StdAfx.h, StdAfx.cpp
    These files are used to build a precompiled header (PCH) file
    named MinimalAddIn.pch and a precompiled types file named StdAfx.obj.

Resource.h
    This is the standard header file that defines resource IDs.


/////////////////////////////////////////////////////////////////////////////
